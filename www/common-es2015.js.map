{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-a6787d69.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4584ab5a.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./src/app/services/authentication/authentication.service.ts","./src/app/services/categories/category.service.ts","./src/app/services/employees/employees.service.ts","./src/app/services/products/product.service.ts","./src/app/services/users/users.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAAa;AACtB;AACA;AACA;AACA,mEAAmE,qDAAoB;AACvF,kEAAkE,qDAAsB;AACxF;AACA;AACA,MAAM,6DAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC,MAAM,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;;;;;;;;;;;ACtC1C;AACU;AACM;AACe;AACzB;AACjD,+DAA+D;AACtB;IAO5B,qB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","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-e806d1f6.js';\nimport { createGesture } from './index-f49d994d.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  if (el.componentOnReady) {\n    await el.componentOnReady();\n  }\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { ToastController, NavController, Platform } from '@ionic/angular';\r\nimport { Subject, Observable, from } from 'rxjs';\r\n// import { StorageService } from '../storage/storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { CloneVisitor } from '@angular/compiler/src/i18n/i18n_ast';\r\n\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthenticationService {\r\n  private _isAuthenticated: boolean = false;\r\n  private _isLoading: boolean = true;\r\n  private _jwtToken: string = \"\";\r\n  private _userId: string = \"\";\r\n  private _userInfo: any = {};\r\n\r\n  public _statusChange$ = new Subject<boolean>();\r\n  public loginStatus$ = this._statusChange$.asObservable();\r\n\r\n  constructor(\r\n    private afAuth: AngularFireAuth,\r\n    private firestore: AngularFirestore,\r\n    private toast: ToastController,\r\n    // private storage: StorageService,\r\n    private router: Router,\r\n    private nav: NavController,\r\n  ) {\r\n    this.afAuth.authState.subscribe(async (user) => {\r\n      if (user) {\r\n        this._isAuthenticated = true;\r\n        this._jwtToken = await this.afAuth.auth.currentUser.getIdToken(true);\r\n        this._userId = await this.afAuth.auth.currentUser.uid;\r\n        let userInfo = await this.firestore.collection('users').doc(this._userId).valueChanges();\r\n        console.log(userInfo);\r\n      } else {\r\n        this._isAuthenticated = false;\r\n        this._jwtToken = \"\";\r\n        // this.storage.clearTokenAndUser();\r\n      }\r\n    });\r\n  }\r\n  get token(): string {\r\n    return this._jwtToken;\r\n  }\r\n  get isAuthenticated(): boolean {\r\n    return this._isAuthenticated;\r\n  }\r\n  get isAdmin(): boolean {\r\n    if (!(this._userInfo.userRole === 'Admin')) return true;\r\n    return false;\r\n  }\r\n  get userId(): string {\r\n    return this._userId;\r\n  }\r\n  public get userInfo(): any {\r\n    return this._userInfo;\r\n  }\r\n  get isLoading(): boolean {\r\n    return this._isLoading;\r\n  }\r\n\r\n  // async login(email: string, password: string) {\r\n  //   this._isLoading = true;\r\n  //   try {\r\n  //     await this.afAuth.auth.signInWithEmailAndPassword(email, password);\r\n  //   } catch (ex) {\r\n  //     console.log(ex);\r\n  //     this._isLoading = false;\r\n  //     this.presentToast(\r\n  //       \"Email or Password is incorrect. Make sure you have entered the right email and password combination\",\r\n  //       \"warning\"\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  async login(email: string, password: string) {\r\n    this._isLoading = true;\r\n    try {\r\n      let user = await this.afAuth.auth.signInWithEmailAndPassword(email, password);\r\n      let userInfo;\r\n      if(user){\r\n        userInfo = await this.firestore.collection('users').doc(user.user.uid).get().toPromise().then((userInfo)=>{\r\n          return userInfo.data();\r\n        });  \r\n        // userInfo = afs.collection<Shirt>('shirts');\r\n        // .snapshotChanges() returns a DocumentChangeAction[], which contains\r\n        // a lot of information about \"what happened\" with each change. If you want to\r\n        // get the data and the id use the map operator.\r\n        // let promise = new Promise((resolve, reject) => {\r\n        //   of(this.firestore.collection('users').valueChanges())\r\n        //       .toPromise()\r\n        //       .then(\r\n        //           res => { // Success\r\n    \r\n        //             console.log(res);\r\n        //             resolve(res);\r\n        //           },\r\n        //           msg => { // Error\r\n        //             reject(msg);\r\n        //           }\r\n        //       );\r\n        // });\r\n        // userInfo = await promise;\r\n        \r\n\r\n      }\r\n        \r\n      console.log(\"User Inform returned from login\", Object.assign(userInfo, { id: user.user.uid }));\r\n      window.localStorage.setItem('user', JSON.stringify(userInfo));\r\n      this._isLoading = false;\r\n      return true;\r\n      \r\n      // if(userInfo){\r\n      //   if(userInfo.role === \"Admin\")\r\n      //     this.router.navigate([`/employees`]);\r\n      //   else\r\n      //     this.router.navigate([`/users/${user.user.uid}`]);  \r\n      // }\r\n    } catch (ex) {\r\n      console.log(ex);\r\n      this._isLoading = false;\r\n      this.presentToast(\r\n        \"Email or Password is incorrect. Make sure you have entered the right email and password combination\",\r\n        \"warning\"\r\n      );\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async register(user: any) {\r\n    this._isLoading = true;\r\n    try {\r\n      console.log(\"Signup Form\",user);\r\n      let user_data = await this.afAuth.auth.createUserWithEmailAndPassword(user.email, user.password);\r\n      await this.firestore.collection('users').doc(user_data.user.uid).set(user);\r\n      this.presentToast(\"User has been registered successfull\",\"success\");\r\n      return true;\r\n    } catch (ex) {\r\n      console.log(ex);\r\n      this._isLoading = false;\r\n      this.presentToast(\"User registration failed\",\"error\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async passwordReset(email) {\r\n    try {\r\n      await this.afAuth.auth.sendPasswordResetEmail(email);\r\n      return true;\r\n    } catch (ex) {\r\n      return false;\r\n    }\r\n  }\r\n  async logout() {\r\n    await this.afAuth.auth.signOut();\r\n    this.nav.navigateRoot(\"\");\r\n  }\r\n\r\n  async presentToast(message: string, color: string) {\r\n    const toast = await this.toast.create({\r\n      message: message,\r\n      color: color,\r\n      duration: 2000,\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async refreshToken() {\r\n    this._isAuthenticated = true;\r\n    this._jwtToken = await this.afAuth.auth.currentUser.getIdToken(true);\r\n    this._userId = await this.afAuth.auth.currentUser.uid;\r\n\r\n    // this.storage.setToken(this._jwtToken);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { promise } from 'protractor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private _http: HttpClient) { }\n\n  // Need to provide parameters to filter the results\n  getCategories(params: any = null) {\n    return this._http.get('products/categories', { params: this.constructParameters(params) }).toPromise();\n  }\n  \n  // Constructing Parameters //\n  private constructParameters(params) {\n    let _params = {};\n    Object.entries(params).map((item) => {\n      if (item[1] != null)\n        _params[item[0]] = item[1];\n    })\n    return _params;\n  }\n  // Constructing Parameters //\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport User from \"../../models/user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeesService {\n\n  private dbPath = '/users';\n\n  tutorialsRef: AngularFirestoreCollection<any> = null;\n\n  constructor(private db: AngularFirestore) {\n    this.tutorialsRef = db.collection(this.dbPath);\n  }\n\n  getAllEmployees(){\n    return this.db.collection('users', ref => ref.where('role', '==', 'Employee')).valueChanges({ idField: 'userId' });\n  }\n  \n  SearchEmployeesByPhoneNo(phoneNo: string) {\n    return this.db.collection('users', ref => ref.where('role', '==', 'Employee')\n    .where('phoneNumber', '==', phoneNo));\n  }\n\n  async getEmployeeById(employeeId: string){\n    let employee = await this.db.collection('users').doc(employeeId).valueChanges();\n    console.log(\"getEmployeeById\",employee);\n    return employee;\n  }\n\n  getUsersByEmployeeId(employeeId: string){\n    return this.db.collection('users', ref => ref.where('employeeId', '==', employeeId)).valueChanges({ idField: 'userId' });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { promise } from 'protractor';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ProductService {\n\n  constructor(private _http: HttpClient) { }\n\n  // Need to provide parameters to filter the results\n  getProducts(params: any = null) {\n    return this._http.get('products', { params: this.constructParameters(params) }).toPromise();\n  }\n  \n  // Constructing Parameters //\n  private constructParameters(params) {\n    let _params = {};\n    Object.entries(params).map((item) => {\n      if (item[1] != null)\n        _params[item[0]] = item[1];\n    })\n    return _params;\n  }\n  // Constructing Parameters //\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport User  from \"../../models/user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(\n    private db: AngularFirestore\n  ) { }\n\n  getAllUsers() {\n    return this.db.collection('users', ref => ref.where('role', '==', 'User')).valueChanges({ idField: 'userId' });\n  }\n\n  updateUserSubscription(userId) {\n    return this.db\n      .collection(\"users\")\n      .doc(userId)\n      .set({\n        subscription: true,\n        employeeId:\n          'bYpltxghnJcYoUz8M5U7W50ZO2h2'\n      }, { merge: true });\n  }\n\n\n  SearchUsersByPhoneNo(phoneNo: string) {\n    return this.db.collection('users', ref => ref.where('role', '==', 'User')\n      .where('phoneNumber', '==', phoneNo));\n  }\n\n  async getUserById(employeeId: string) {\n    let user = await this.db.collection('users').doc(employeeId).get().toPromise();\n    return user;\n  }\n\n  getUsersByEmployeeId(employeeId: string) {\n    return this.db.collection('users', ref => ref.where('employeeId', '==', employeeId));\n  }\n}\n"],"sourceRoot":"webpack:///"}